#!/bin/bash

#
#	Copyright (C) 2010 Dark X Dragon (Will Moggridge)
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

# TODO: Add support for command line argument filenames with whitespace

function PrintHelp {
	echo "Usage: android-export-svg-icons [OPTION]... [FILE]...

  -d, --directory=DIR   Recursively add svg files from a directory
  -s, --sizes=SIZES     Set sizes to export to, separated by commas.
                        Assume W=H, unless specifically entered as WWxHH.
  -t, --type=TYPE       Export to predeetermined sizes, options are listed below.
                        logo:                   512,72,48,36
                        notification_icon:      48,36,24
      --debug           Debug mode. Show debug output and do not export files.

Example: android-export-svg-icons --directory=some/folder --sizes=48,36,24x12
    or:  android-export-svg-icons --type=logo file.svg file2.svg


This script exports a selection of svg files in a selection of sizes using Inkscape.
Currently there is a bug which prevents files with spaces being added through the
command line arguments."
	exit
}


###############################################
############ Variables
###############################################
DEBUG=false



###############################################
############ Functions
###############################################

# Validate and add size to an array of sizes (in pixels) to export
# $1 = Size <48|48x48>
function AddSize {
	# Validate size input
	if [ `echo $1 | grep -E '^([0-9]+|[0-9]+x[0-9]+)$'` ]; then
		# Count array index and use that vlue as index for next entry
		SIZECOUNT=${#SIZES[@]}
		SIZES[SIZECOUNT]=$1
	else
		echo "Invalid size: $1"
	fi
}

# Split size input string and send to AddSize
# $1 = Size string (Sizes seperated by comma) <1,2,3x4>
function AddSizeString {
	# Set Input Field Seperator to comma
	unset $IFS
	IFS=,

	for SIZE in $1
	do			
		AddSize $SIZE
	done
	
	# Reset IFS
	unset $IFS
}

# Add sizes to array from predetermined lists
# $1 = Type (String to match one of case list below)
function AddSizesFromType {
	case $1 in
		logo)
			AddSize 36
			AddSize 48
			AddSize 72
			AddSize 512
			;;
			
		notification_icon)
			AddSize 24
			AddSize 36
			AddSize 48
			;;
			
		*)
			echo "Invalid Export Type"
			exit
			;;
	esac
}

# Add file to array
# $1 = File
function AddFile {
	# Count array index and use that vlue as index for next entry
	FILECOUNT=${#FILES[@]}
	FILES[$FILECOUNT]=$1
}

# Find svg files in a folder and add them to array
# $1 = Folder
function AddFolder {
	# Get folder and remove any trailing slash
	FOLDER=`echo $1 |sed 's#/*$##'`
	
	# Set Input Field Seperator to newline
	unset $IFS
	IFS=$'\n'

	for FILE in `find "$FOLDER" -name "*.svg"`
	do
		AddFile $FILE
	done
	
	# Reset IFS
	unset $IFS
}

# Export individual svg to png with inkscape
# $1 = File
# $2 = Size <48|48x48>
function ExportFile {
	FILE=$1
	SIZE=$2
	
	echo 
	echo '################### EXPORTING '$FILE $SIZE'px...'
	
	if [ -e $FILE ]; then
		# Remove Extension
		FILENOEXTENSION=`echo $FILE | sed 's/\.svg$//g'`
		# Create output filename with size
		EXPORTFILE=$FILENOEXTENSION'.'$SIZE'px.png'
		
		# If format is WIDTHxHEIGHT do this, else assume 1:1 ratio
		if [ `echo $SIZE | grep -E '^[0-9]+x[0-9]+$'` ]; then
			SIZEWIDTH=`echo $SIZE | sed 's/x[0-9]*//'`
			SIZEHEIGHT=`echo $SIZE | sed 's/[0-9]*x//'`
		else
			SIZEWIDTH=$SIZE
			SIZEHEIGHT=$SIZE
		fi
		
		# If debug mode is on
		if $DEBUG; then
			echo '$FILE =            '$FILE
			echo '$FILENOEXTENSION = '$FILENOEXTENSION
			echo '$EXPORTFILE =      '$EXPORTFILE
			echo 'inkscape --without-gui --file'$FILE' --export-png='$EXPORTFILE' --export-area-page -w='$SIZEWIDTH' -h='$SIZEHEIGHT
		else
			echo "TODO: export $EXPORTFILE"
			#inkscape --without-gui --file=$FILE --export-png=$EXPORTFILE\
			# --export-area-page -w=$SIZEWIDTH -h=$SIZEHEIGHT
		fi
	else 
		echo "File does not exist."
	fi
	
}

# Export all files
function ExportAll {
	for FILE in ${FILES[@]}
	do		
		for SIZE in ${SIZES[@]}
		do
			ExportFile $FILE $SIZE
		done
	done
}









###############################################
############ Script executes from here
###############################################

# If there are no arguments, print help
[ "$#" -ge 1 ] || PrintHelp

# Read command line arguments
for i in $@
do
	case $i in
		-h|--help)
			PrintHelp
			;;
			
		-t=*|--type=*)
			# Export type; logo, notification
			AddSizesFromType `echo $i | sed 's/[-a-zA-Z0-9]*=//'`
			;;
			
		-s=*|--sizes=*)
			# Export size/s. -s=512 -s=72,48,36
			AddSizeString `echo $i | sed 's/[-a-zA-Z0-9]*=//'`
			;;
			
		-d=*|--directory=*)
			# recursively export files from this folder
			AddFolder `echo $i | sed 's/[-a-zA-Z0-9]*=//'`
			;;
			
		--debug)
			# Debug output and do not export files
			DEBUG=true
			AddSize 50
			AddSize 50x10
			;;
			
		*)
			# TODO: Support filenames with whitespace?
			# Filenames
			AddFile $i
			;;
	esac
done

# Start exporting files
ExportAll


